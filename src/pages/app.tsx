import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Form from "../components/Form";
import ProgressBar from "../components/ProgressBar";
import Link from "next/link";
import {useState} from "react";


const App: NextPage = () => {
    const [isOpen, setIsOpen] = useState(false);
    const formatter = Intl.DateTimeFormat('fr-CA', {
        dateStyle: "medium"
    })

    const toggleModal = () => {
        isOpen ? setIsOpen(false) : setIsOpen(true);
    }
  const {mutateAsync: mutate} = trpc.useMutation('participations.addOne');
  const {data: p, isLoading, refetch: refetchAll} =  trpc.useQuery(["participations.getAll"]);
  const {data: total, refetch: refetchDistance} =  trpc.useQuery(["participations.totalDistance"]);
    const {data: goal} =  trpc.useQuery(["goal.totalDistance"]);

  const refresh = async () => {
    await refetchAll();
    await refetchDistance();

  }
  return (
    <>
      <Head>
        <title>Défi Bacon</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        {isOpen?(<div className={"inset-0 absolute z-10 bg-dark bg-opacity-80 container mx-auto flex justify-center overflow-x-hidden"}><Form mutate={mutate} refresh={refresh} toggleModal={toggleModal}></Form></div>): ""}
      <div className={"container mx-auto flex justify-center"}>

          <div className={" flex flex-col bg-dark max-w-6xl  md:rounded-lg md:px-24 px-10 py-20 md:my-20"}>

          <div className={"flex md:flex-row w-full md:justify-between justify-between"}>
              <div className={"md:text-6xl text-2xl mb-14 text-white uppercase font-bold font-poppins"}>Résultats</div>
              <div onClick={toggleModal} className={"cursor-pointer md:text-xl text-md mb-14 self-center hover:shadow hover:text-white hover:bg-primary md:self-center w-max h-max text-dark uppercase bg-secondary md:py-4 py-2 px-4 rounded-lg  font-bold font-poppins"}>++ Course</div>
          </div>
          <ProgressBar total={total ? total :0} goal={goal? goal : 0} type={"distance"} />

          <div className={"border-b-2 -mt-5 mb-14"}></div>
          <div className={"md:text-6xl text-4xl md:mb-14 mb-8 text-white uppercase font-bold font-poppins"}>Participants</div>
          {p?.map((el: any) => {
              console.log(el)
              return (
                  <div className="my-1" key={el.id}>
                      <div className="flex flex-row space-x-2 items-center md:py-6 py-4 md:px-14 px-6 justify-between bg-primary rounded-2xl shadow">
                          <div className={"flex flex-col"}>
                              <div className={"md:text-4xl text-2xl text-white font-poppins"}><Link href={`/profil/${el.participant.id}`}>{el.participant.name}</Link></div>
                              <div className={"md:text-2xl text-lg text-dark text-dark mt-2"}>{formatter.format(el.date)}</div>
                          </div>
                          <div className={"md:text-5xl text-xl text-white w-max flex md:self-center self-start"}>{el.distance}KM</div>
                      </div>
                  </div>
              )})}
      </div>
      </div>
    </>
  );
};

export default App;
