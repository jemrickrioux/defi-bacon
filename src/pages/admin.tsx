import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Form from "../components/Form";
import Board from "../components/Board";
import ParticipantsList from "../components/ParticipantsList";


const Admin: NextPage = () => {
    const {data: goalDistance, refetch} =  trpc.useQuery(["goal.totalDistance"]);
    const {data: totalDistance, refetch: refetchDistance} =  trpc.useQuery(["participations.totalDistance"]);
    const {data: p, isLoading, refetch: refetchAll} =  trpc.useQuery(["participations.getAll"]);
    const {mutate, isLoading: isGoalLoading} = trpc.useMutation('goal.update',{
        onSuccess: () => {
            refetch()
        }
    });
    const handleSubmit = async (e:any) => {
        e.preventDefault();
        const number = e.target.totalDistance.value;
        await mutate(parseInt(number));
        e.target.totalDistance.value = ""
    }

    return (
        <>
            <Head>
                <title>DÃ©fi Bacon</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={"container mx-auto min-h-screen my-10 "}>
                <div className={"border-2 rounded-lg mx-auto md:mx-20 mx-5 rounded-lg p-10 my-20 px-6 bg-white flex flex-col space-y-2"}>
                    <h2 className={"text-4xl font-sans"}>Admin</h2>
                    <div>La distance totale est de : {goalDistance ? goalDistance: ""} KM</div>
                    <form onSubmit={handleSubmit} className={"space-y-2"}>
                        {isGoalLoading? (<p>Loading...</p>) : (<input className={"w-full"} type={"text"} name={"totalDistance"} placeholder={"Entrer la nouvelle distance"}/>)}
                        <input type={"submit"} className={"bg-green-200 w-max px-3 py-1 border border-white rounded-lg cursor-pointer hover:border-gray-300 hover:shadow"}/>
                    </form>
                    <div>
                    <ParticipantsList p={p? p : []} isLoading={isLoading} total={totalDistance? totalDistance: 0} goal={goalDistance? goalDistance : 0}/>
                    </div>
                </div>
            </div>
        </>
    );
};

export default Admin;
